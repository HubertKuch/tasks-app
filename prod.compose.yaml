services:
  web:
    image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro
    networks:
      - laravel-production
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      php-fpm:
        condition: service_healthy

  php-fpm:
    image: 'php:8.4-fpm'
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage
    env_file:
      - .env
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD-SHELL", "php-fpm-healthcheck || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:latest
    container_name: todo-db
    restart: unless-stopped
    environment:
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data-production:/var/lib/mysql
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - laravel-production
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-production:

volumes:
  mysql-data-production:
  laravel-storage-production:
